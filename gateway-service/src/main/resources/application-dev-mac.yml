server:
  port: 9092
spring:
  cloud:
    nacos:
      discovery:
        server-addr: single.nacos.cn:8848
        username: nacos
        password: 1qazxsw2
        namespace: DEV
    sentinel:
      transport:
        dashboard: single.sentinel.cn:8858
        client-ip: 192.168.0.102
      datasource:
        gw-flow:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            data-id: ${spring.application.name}-flow-rules
            group-id: gateway
            namespace: DEV
            rule-type: gw-flow
            username: ${spring.cloud.nacos.discovery.username}
            password: ${spring.cloud.nacos.discovery.password}
      eager: true
      # fileter:
      #   enabled: true
      # scg.fallback:
      #   mode: response
      #   response-status: 444
      #   response-body: 1234
      # scg:
      #   order: -100
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            # 跨域处理 允许所有的域
            allowedOriginPatterns: "*"
            # 允许请求中携带的头信息
            allowedHeaders: "*"
            # 是否允许携带cookie
            allowCredentials: true
            # 跨域检测的有效期,单位s
            maxAge: 3600
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      discovery:
        locator:
          lower-case-service-id: true
      routes:
        - id: leave-service
          uri: lb://leave-service
          predicates:
            - Path=/leave/**
          filters:
            - StripPrefix=1
            - RequestLogging
            - ResponseLogging
            - TokenRelay=
#        - id: auth-service
#          uri: lb://auth-service
#          predicates:
#            - Path=/auth/**
#          filters:
#            - StripPrefix=1
#            - TokenRelay=
  security:
    oauth2:
      client:
        registration:
          messaging-client-oidc:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:9092/login/oauth2/code/{registrationId}"
            scope: openid, profile
            client-name: messaging-client-oidc
        provider:
          spring:
            issuer-uri: http://192.168.0.102:9090 #这个不要和客户端ip一致 不然玩不了

knife4j:
  # 聚合swagger文档
  gateway:
    enabled: true
    tags-sorter: order
    operations-sorter: order
    # 指定手动配置的模式(默认为该模式)
    strategy: manual
    # discover:
    #   excluded-services: ${spring.application.name}
    routes:
#      - name: 认证服务
#        url: /auth/v3/api-docs
#        service-name: auth-service
#        # 路由前缀
#        # 兼容OpenAPI3规范在聚合时丢失contextPath属性的异常情况，由开发者自己配置contextPath,Knife4j的前端Ui做兼容处理,与url属性独立不冲突，仅OpenAPI3规范聚合需要，OpenAPI2规范不需要设置此属性,默认为(apiPathPrefix)
#        context-path: /auth
#        order: 1
      - name: 请假服务
        url: /leave/v3/api-docs
        service-name: leave-service
        # 路由前缀
        context-path: /leave
        order: 2

logging:
  level:
    root: INFO
    org.springframework.web: debug
    org.springframework.security: debug
    org.springframework.security.oauth2: debug
    org.springframework.security.oauth2.client: debug